---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: haproxy-ingress
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy-ingress
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: haproxy-ingress
  template:
    metadata:
      labels:
        app: haproxy-ingress
    spec:
      serviceAccountName: haproxy-ingress
      containers:
        - name: haproxy-ingress
          image: haproxytech/kubernetes-ingress:3.0.6
          args:
            - --configmap=default/haproxy-ingress-config
            - --http-port=8080
            - --https-port=8443
            - --default-backend-service=default/nginx-service
            - --maps-dir=/etc/haproxy/maps
            - --disable-backend-health-checks=true
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
              add: ["NET_BIND_SERVICE"]
          volumeMounts:
            - name: maps-dir
              mountPath: /etc/haproxy/maps
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      volumes:
        - name: maps-dir
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: haproxy-ingress
  namespace: default
spec:
  type: NodePort
  selector:
    app: haproxy-ingress
  ports:
    - name: http
      port: 80
      targetPort: 8080
      nodePort: 30080
    - name: https
      port: 443
      targetPort: 8443
      nodePort: 30443
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-ingress-config
  namespace: default
data:
  # optional tweaks, leave minimal for now
  syslog-endpoint: "stdout"
  ssl-redirect: "false"
  max-connections: "2000"
  ssl-ciphers: "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384"
  disable-backend-health-checks: "true"
  backend-check-status: "200,401"
