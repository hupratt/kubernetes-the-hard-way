apiVersion: v1
kind: Namespace
metadata:
  name: haproxy-controller
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: haproxy-ingress
  namespace: haproxy-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy-ingress
  namespace: haproxy-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: haproxy-ingress
  template:
    metadata:
      labels:
        app: haproxy-ingress
    spec:
      serviceAccountName: haproxy-ingress
      containers:
        - name: haproxy-ingress
          image: haproxytech/kubernetes-ingress:latest
          args:
            - --default-backend-service=$(POD_NAMESPACE)/haproxy-ingress-default-backend
            - --ingress-class=haproxy
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
            - containerPort: 443
          # Liveness probe removed to avoid crash loops
---
apiVersion: v1
kind: Service
metadata:
  name: haproxy-ingress
  namespace: haproxy-controller
spec:
  type: NodePort
  selector:
    app: haproxy-ingress
  ports:
    - name: http
      port: 80
      targetPort: 80
      nodePort: 30080
    - name: https
      port: 443
      targetPort: 443
      nodePort: 30443
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-ingress-config
  namespace: haproxy-controller
data:
  # optional HAProxy config overrides
  log-level: info
---
apiVersion: v1
kind: Service
metadata:
  name: haproxy-ingress-default-backend
  namespace: haproxy-controller
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: haproxy-ingress
